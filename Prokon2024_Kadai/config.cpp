#include "config.h"
#include "DxLib.h"

void Config::init()
{
	keyConfig[KEY_INPUT_BACK] = KEY_INPUT_BACK;
	keyConfig[KEY_INPUT_TAB] = KEY_INPUT_TAB;
	keyConfig[KEY_INPUT_RETURN] = KEY_INPUT_RETURN;

	keyConfig[KEY_INPUT_LSHIFT] = KEY_INPUT_LSHIFT;
	keyConfig[KEY_INPUT_RSHIFT] = KEY_INPUT_RSHIFT;
	keyConfig[KEY_INPUT_LCONTROL] = KEY_INPUT_LCONTROL;
	keyConfig[KEY_INPUT_RCONTROL] = KEY_INPUT_RCONTROL;
	keyConfig[KEY_INPUT_ESCAPE] = KEY_INPUT_ESCAPE;
	keyConfig[KEY_INPUT_SPACE] = KEY_INPUT_SPACE;
	keyConfig[KEY_INPUT_PGUP] = KEY_INPUT_PGUP;
	keyConfig[KEY_INPUT_PGDN] = KEY_INPUT_PGDN;
	keyConfig[KEY_INPUT_END] = KEY_INPUT_END;
	keyConfig[KEY_INPUT_HOME] = KEY_INPUT_HOME;
	keyConfig[KEY_INPUT_LEFT] = KEY_INPUT_LEFT;
	keyConfig[KEY_INPUT_UP] = KEY_INPUT_UP;
	keyConfig[KEY_INPUT_RIGHT] = KEY_INPUT_RIGHT;
	keyConfig[KEY_INPUT_DOWN] = KEY_INPUT_DOWN;
	keyConfig[KEY_INPUT_INSERT] = KEY_INPUT_INSERT;
	keyConfig[KEY_INPUT_DELETE] = KEY_INPUT_DELETE;

	keyConfig[KEY_INPUT_MINUS] = KEY_INPUT_MINUS;
	keyConfig[KEY_INPUT_YEN] = KEY_INPUT_YEN;
	keyConfig[KEY_INPUT_PREVTRACK] = KEY_INPUT_PREVTRACK;
	keyConfig[KEY_INPUT_PERIOD] = KEY_INPUT_PERIOD;
	keyConfig[KEY_INPUT_SLASH] = KEY_INPUT_SLASH;
	keyConfig[KEY_INPUT_LALT] = KEY_INPUT_LALT;
	keyConfig[KEY_INPUT_RALT] = KEY_INPUT_RALT;
	keyConfig[KEY_INPUT_SCROLL] = KEY_INPUT_SCROLL;
	keyConfig[KEY_INPUT_SEMICOLON] = KEY_INPUT_SEMICOLON;
	keyConfig[KEY_INPUT_COLON] = KEY_INPUT_COLON;
	keyConfig[KEY_INPUT_LBRACKET] = KEY_INPUT_LBRACKET;
	keyConfig[KEY_INPUT_RBRACKET] = KEY_INPUT_RBRACKET;
	keyConfig[KEY_INPUT_AT] = KEY_INPUT_AT;
	keyConfig[KEY_INPUT_BACKSLASH] = KEY_INPUT_BACKSLASH;
	keyConfig[KEY_INPUT_COMMA] = KEY_INPUT_COMMA;
	keyConfig[KEY_INPUT_KANJI] = KEY_INPUT_KANJI;
	keyConfig[KEY_INPUT_CONVERT] = KEY_INPUT_CONVERT;
	keyConfig[KEY_INPUT_NOCONVERT] = KEY_INPUT_NOCONVERT;
	keyConfig[KEY_INPUT_KANA] = KEY_INPUT_KANA;
	keyConfig[KEY_INPUT_APPS] = KEY_INPUT_APPS;
	keyConfig[KEY_INPUT_CAPSLOCK] = KEY_INPUT_CAPSLOCK;
	keyConfig[KEY_INPUT_SYSRQ] = KEY_INPUT_SYSRQ;
	keyConfig[KEY_INPUT_PAUSE] = KEY_INPUT_PAUSE;
	keyConfig[KEY_INPUT_LWIN] = KEY_INPUT_LWIN;
	keyConfig[KEY_INPUT_RWIN] = KEY_INPUT_RWIN;

	keyConfig[KEY_INPUT_NUMLOCK] = KEY_INPUT_NUMLOCK;
	keyConfig[KEY_INPUT_NUMPAD0] = KEY_INPUT_NUMPAD0;
	keyConfig[KEY_INPUT_NUMPAD1] = KEY_INPUT_NUMPAD1;
	keyConfig[KEY_INPUT_NUMPAD2] = KEY_INPUT_NUMPAD2;
	keyConfig[KEY_INPUT_NUMPAD3] = KEY_INPUT_NUMPAD3;
	keyConfig[KEY_INPUT_NUMPAD4] = KEY_INPUT_NUMPAD4;
	keyConfig[KEY_INPUT_NUMPAD5] = KEY_INPUT_NUMPAD5;
	keyConfig[KEY_INPUT_NUMPAD6] = KEY_INPUT_NUMPAD6;
	keyConfig[KEY_INPUT_NUMPAD7] = KEY_INPUT_NUMPAD7;
	keyConfig[KEY_INPUT_NUMPAD8] = KEY_INPUT_NUMPAD8;
	keyConfig[KEY_INPUT_NUMPAD9] = KEY_INPUT_NUMPAD9;
	keyConfig[KEY_INPUT_MULTIPLY] = KEY_INPUT_MULTIPLY;
	keyConfig[KEY_INPUT_ADD] = KEY_INPUT_ADD;
	keyConfig[KEY_INPUT_SUBTRACT] = KEY_INPUT_SUBTRACT;
	keyConfig[KEY_INPUT_DECIMAL] = KEY_INPUT_DECIMAL;
	keyConfig[KEY_INPUT_DIVIDE] = KEY_INPUT_DIVIDE;
	keyConfig[KEY_INPUT_NUMPADENTER] = KEY_INPUT_NUMPADENTER;

	keyConfig[KEY_INPUT_F1] = KEY_INPUT_F1;
	keyConfig[KEY_INPUT_F2] = KEY_INPUT_F2;
	keyConfig[KEY_INPUT_F3] = KEY_INPUT_F3;
	keyConfig[KEY_INPUT_F4] = KEY_INPUT_F4;
	keyConfig[KEY_INPUT_F5] = KEY_INPUT_F5;
	keyConfig[KEY_INPUT_F6] = KEY_INPUT_F6;
	keyConfig[KEY_INPUT_F7] = KEY_INPUT_F7;
	keyConfig[KEY_INPUT_F8] = KEY_INPUT_F8;
	keyConfig[KEY_INPUT_F9] = KEY_INPUT_F9;
	keyConfig[KEY_INPUT_F10] = KEY_INPUT_F10;
	keyConfig[KEY_INPUT_F11] = KEY_INPUT_F11;
	keyConfig[KEY_INPUT_F12] = KEY_INPUT_F12;

	keyConfig[KEY_INPUT_A] = KEY_INPUT_A;
	keyConfig[KEY_INPUT_B] = KEY_INPUT_B;
	keyConfig[KEY_INPUT_C] = KEY_INPUT_C;
	keyConfig[KEY_INPUT_D] = KEY_INPUT_D;
	keyConfig[KEY_INPUT_E] = KEY_INPUT_E;
	keyConfig[KEY_INPUT_F] = KEY_INPUT_F;
	keyConfig[KEY_INPUT_G] = KEY_INPUT_G;
	keyConfig[KEY_INPUT_H] = KEY_INPUT_H;
	keyConfig[KEY_INPUT_I] = KEY_INPUT_I;
	keyConfig[KEY_INPUT_J] = KEY_INPUT_J;
	keyConfig[KEY_INPUT_K] = KEY_INPUT_K;
	keyConfig[KEY_INPUT_L] = KEY_INPUT_L;
	keyConfig[KEY_INPUT_M] = KEY_INPUT_M;
	keyConfig[KEY_INPUT_N] = KEY_INPUT_N;
	keyConfig[KEY_INPUT_O] = KEY_INPUT_O;
	keyConfig[KEY_INPUT_P] = KEY_INPUT_P;
	keyConfig[KEY_INPUT_Q] = KEY_INPUT_Q;
	keyConfig[KEY_INPUT_R] = KEY_INPUT_R;
	keyConfig[KEY_INPUT_S] = KEY_INPUT_S;
	keyConfig[KEY_INPUT_T] = KEY_INPUT_T;
	keyConfig[KEY_INPUT_U] = KEY_INPUT_U;
	keyConfig[KEY_INPUT_V] = KEY_INPUT_V;
	keyConfig[KEY_INPUT_W] = KEY_INPUT_W;
	keyConfig[KEY_INPUT_X] = KEY_INPUT_X;
	keyConfig[KEY_INPUT_Y] = KEY_INPUT_Y;
	keyConfig[KEY_INPUT_Z] = KEY_INPUT_Z;

	keyConfig[KEY_INPUT_0] = KEY_INPUT_0;
	keyConfig[KEY_INPUT_1] = KEY_INPUT_1;
	keyConfig[KEY_INPUT_2] = KEY_INPUT_2;
	keyConfig[KEY_INPUT_3] = KEY_INPUT_3;
	keyConfig[KEY_INPUT_4] = KEY_INPUT_4;
	keyConfig[KEY_INPUT_5] = KEY_INPUT_5;
	keyConfig[KEY_INPUT_6] = KEY_INPUT_6;
	keyConfig[KEY_INPUT_7] = KEY_INPUT_7;
	keyConfig[KEY_INPUT_8] = KEY_INPUT_8;
	keyConfig[KEY_INPUT_9] = KEY_INPUT_9;
}

std::array<int, 256> Config::keyConfig;
const double Config::diving = 1;